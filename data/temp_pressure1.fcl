// Test FCL file
// Note that ';' terminates a FCL line, so any text on a line
// after a ';' is ignored.
// Also, inside a FUZZIFY or DEFUZZIFY block, extra lines that
// don't start with a keyword are ignored.
// Other than that, any line that starts with '//' is ignored.
// The FCL comment is apparently delimeted as: (* comment *)
// Any line that starts with '(*' is ignored.
//
// Problem: doesn't recognize FCL statements that span lines
// Problem: doesn't truly recognize (* ... *) as comment
// 
FUNCTION_BLOCK Fuzzy_FB
VAR_INPUT
	// temperature and pressure input variables
	temp     : REAL;
	pressure : REAL;
END_VAR
VAR_OUTPUT
	// dual valve output
	valve1 : REAL;
	valve2 : REAL;
END_VAR
FUZZIFY temp
	// cold ramp, warm trapezoid, hot ramp
	TERM cold := (30, 1) (50, 0);
	TERM warm := (30, 0) (40, 1) (60, 1) (70, 0);
	TERM hot  := (50, 0) (70, 1);
END_FUZZIFY
FUZZIFY pressure
	// ramp, triangle, trapezoid, triangle, ramp
	TERM low      := (200, 1) (400, 0);
	TERM med_low  := (200, 0) (400, 1) (600, 0);
	TERM medium   := (400, 0) (450, 1) (550, 1) (600, 0);
	TERM med_high := (400, 0) (600, 1) (800, 0);
	TERM high     := (600, 0) (800, 1);
END_FUZZIFY
DEFUZZIFY valve1
	  // All outputs are singletons
	  TERM closed            := 0;    // (0, 0) (10, 1);
	  TERM quarter_open      := 25;   // (0, 0) (4, 1) (6, 1) (10, 0);
	  TERM half_open         := 50;
	  TERM threeQuarter_open := 75;
	  TERM open		 := 100;
	  ACCU: MAX;
	  METHOD: COG;
	  DEFAULT:= 0;
	  RANGE:= (0, 100);
END_DEFUZZIFY
DEFUZZIFY valve2
	  // All outputs are singletons
	  TERM closed            := 0;    // (0, 0) (10, 1);
	  TERM quarter_open      := 25;   // (0, 0) (4, 1) (6, 1) (10, 0);
	  TERM half_open         := 50;
	  TERM threeQuarter_open := 75;
	  TERM open		 := 100;
	  ACCU: MAX;
	  METHOD: COG;
	  DEFAULT:= 0;
	  RANGE:= (0, 100);
END_DEFUZZIFY
RULEBLOCK No1
	  AND : MIN;
	  OR  : MAX;
	  ACT : MIN;
	  // 
	  RULE 1: IF temp IS cold AND pressure IS low
		  THEN valve1 IS closed, valve2 IS open;
	  // 
	  RULE 2: IF temp IS cold AND pressure IS med_low
		  THEN valve1 IS quarter_open, valve2 IS threeQuarter_open;
	  // 
	  RULE 3: IF temp IS cold AND pressure IS medium
		  THEN valve1 IS half_open, valve2 IS half_open;
	  // 
	  RULE 4: IF temp IS cold AND pressure IS med_high
		  THEN valve1 IS threeQuarter_open, valve2 IS quarter_open;
	  // 
	  RULE 5: IF temp IS cold AND pressure IS high
		  THEN valve1 IS open, valve2 IS closed;
          //
	  RULE 6: IF temp IS warm AND pressure IS low
		  THEN valve1 IS quarter_open, valve2 IS threeQuarter_open;
	  // 
	  RULE 7: IF temp IS warm AND pressure IS med_low
		  THEN valve1 IS half_open, valve2 IS threeQuarter_open;
	  // 
	  RULE 8: IF temp IS warm AND pressure IS medium
		  THEN valve1 IS half_open, valve2 IS half_open;
	  // 
	  RULE 9: IF temp IS warm AND pressure IS med_high
		  THEN valve1 IS half_open, valve2 IS quarter_open;
	  // 
	  RULE 10: IF temp IS warm AND pressure IS high
		   THEN valve1 IS threeQuarter_open, valve2 IS quarter_open;
	  // 
	  RULE 11: IF temp IS hot AND pressure IS low
		   THEN valve1 IS open, valve2 IS closed;
	  // 
	  RULE 12: IF temp IS hot AND pressure IS med_low
		   THEN valve1 IS threeQuarter_open, valve2 IS quarter_open;
	  // 
	  RULE 13: IF temp IS hot AND pressure IS medium
		   THEN valve1 IS half_open, valve2 IS half_open;
	  // 
	  RULE 14: IF temp IS hot AND pressure IS med_high
		   THEN valve1 IS quarter_open, valve2 IS threeQuarter_open;
	  // 
	  RULE 15: IF temp IS hot AND pressure IS high
		   THEN valve1 IS closed, valve2 IS open;
END_RULEBLOCK
END_FUNCTION_BLOCK
